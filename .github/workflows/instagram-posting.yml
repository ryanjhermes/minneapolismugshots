name: Instagram Posting

on:
  schedule:
    # Post inmates every 5 minutes from 6:05 PM to 11:00 PM Central Time
    - cron: '5,10,15,20,25,30,35,40,45,50,55 23 * * *'  # 6:05-6:55 PM Central
    - cron: '0,5,10,15,20,25,30,35,40,45,50,55 0 * * *'  # 7:00-7:55 PM Central  
    - cron: '0,5,10,15,20,25,30,35,40,45,50,55 1 * * *'  # 8:00-8:55 PM Central
    - cron: '0,5,10,15,20,25,30,35,40,45,50,55 2 * * *'  # 9:00-9:55 PM Central
    - cron: '0,5,10,15,20,25,30,35,40,45,50,55 3 * * *'  # 10:00-10:55 PM Central
    - cron: '0 4 * * *'  # 11:00 PM Central (final check)
  workflow_dispatch: # Allow manual trigger

jobs:
  post-inmates:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write # Allow pushing updates to repository
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dotenv
    
    - name: Create .env file with secrets
      run: |
        echo "ACCESS_TOKEN=${{ secrets.META_ACCESS_TOKEN }}" >> .env
        echo "APP_ID=${{ secrets.META_APP_ID }}" >> .env
        echo "BUSINESS_ID=${{ secrets.META_BUSINESS_ID }}" >> .env
    
    - name: Check for posting queue
      id: check_queue
      run: |
        if [ -f "posting_queue.json" ]; then
          echo "queue_exists=true" >> $GITHUB_OUTPUT
          echo "üìã Posting queue found"
        else
          echo "queue_exists=false" >> $GITHUB_OUTPUT
          echo "üì≠ No posting queue found"
        fi
    
    - name: Post next inmates to Instagram
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        echo "üì± Posting next batch of inmates to Instagram..."
        python data.py post-next
        echo "‚úÖ Posting batch completed"
    
    - name: Commit queue updates
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if posting_queue.json was modified
        if git diff --quiet posting_queue.json; then
          echo "üì≠ No queue changes to commit"
        else
          git add posting_queue.json
          git commit -m "Update posting queue - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "‚úÖ Queue updates committed"
        fi
    
    - name: Skip if no queue
      if: steps.check_queue.outputs.queue_exists == 'false'
      run: |
        echo "‚è≠Ô∏è  No posting queue found - skipping this run"
        echo "üí° Queue will be created when daily scraping runs at 6:00 PM UTC" 