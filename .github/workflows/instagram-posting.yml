name: Instagram Posting

on:
  schedule:
    # Every hour from 10:00 AM to 7:00 PM Central (CDT, UTC-5)
    - cron: '0 15-21 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  post-inmates:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write # Allow pushing updates to repository
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Add randomized delay for Instagram detection avoidance
      run: |
        # Generate random delay between 0-120 seconds (±1 minute)
        RANDOM_DELAY=$((RANDOM % 121))
        echo "🎲 Adding random delay of $RANDOM_DELAY seconds to avoid detection patterns"
        sleep $RANDOM_DELAY

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dotenv pytz
        # Install ML dependencies for BLIP filtering
        pip install transformers torch pillow
        echo "✅ All dependencies installed including BLIP requirements"

    - name: Test BLIP availability
      run: |
        echo "🤖 Testing BLIP AI filter availability..."
        python -c "
        try:
            from transformers import pipeline, AutoProcessor, AutoModelForVisualQuestionAnswering
            from PIL import Image
            print('✅ BLIP dependencies available')
        except ImportError as e:
            print(f'❌ BLIP import error: {e}')
        except Exception as e:
            print(f'⚠️  BLIP setup error: {e}')
        "

    - name: Create .env file with secrets
      run: |
        echo "ACCESS_TOKEN=${{ secrets.META_ACCESS_TOKEN }}" >> .env
        echo "APP_ID=${{ secrets.META_APP_ID }}" >> .env
        echo "BUSINESS_ID=${{ secrets.META_BUSINESS_ID }}" >> .env

    - name: Check for posting queue
      id: check_queue
      run: |
        if [ -f "posting_queue.json" ]; then
          echo "queue_exists=true" >> $GITHUB_OUTPUT
          echo "📋 Posting queue found"
        else
          echo "queue_exists=false" >> $GITHUB_OUTPUT
          echo "📭 No posting queue found"
        fi

    - name: Post next inmates to Instagram
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        echo "📱 Posting next batch of inmates to Instagram..."
        python data.py post-next
        echo "✅ Posting batch completed"

    - name: Clean up posted mugshot files
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        echo "🗑️  Cleaning up posted inmates' mugshot files..."
        python data.py cleanup-mugshots
        echo "✅ Mugshot cleanup completed"

    - name: Add random delay between posts for human-like behavior
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        # Add another small random delay after posting
        RANDOM_DELAY=$((RANDOM % 31 + 10))  # 10-40 seconds
        echo "😴 Adding random post-posting delay of $RANDOM_DELAY seconds"
        sleep $RANDOM_DELAY

    - name: Commit queue updates
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if posting_queue.json was modified
        if git diff --quiet posting_queue.json; then
          echo "📭 No queue changes to commit"
        else
          git add posting_queue.json
          git commit -m "Update posting queue - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "✅ Queue updates committed"
        fi
        
        # Check if any mugshot files were deleted
        if git status --porcelain | grep -q "D.*mugshots/"; then
          echo "🗑️  Committing deleted mugshot files..."
          git add -A mugshots/
          git commit -m "Clean up posted mugshot files - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "✅ Mugshot cleanup committed"
        else
          echo "📭 No mugshot files to clean up"
        fi

    - name: Skip if no queue
      if: steps.check_queue.outputs.queue_exists == 'false'
      run: |
        echo "⏭️  No posting queue found - skipping this run"
        echo "💡 Queue will be created when daily scraping runs at 6:00 PM UTC" 