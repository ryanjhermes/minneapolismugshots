name: Instagram Posting

on:
  schedule:
    # Post inmates every 15 minutes from 6:00 PM to 8:00 PM Central Time
    # With 10 total inmates (2 per batch), we only need ~5 posting cycles
    - cron: '0 23 * * *'   # 6:00 PM Central
    - cron: '15 23 * * *'  # 6:15 PM Central  
    - cron: '30 23 * * *'  # 6:30 PM Central
    - cron: '45 23 * * *'  # 6:45 PM Central
    - cron: '0 0 * * *'    # 7:00 PM Central
    - cron: '15 0 * * *'   # 7:15 PM Central
    - cron: '30 0 * * *'   # 7:30 PM Central
    - cron: '45 0 * * *'   # 7:45 PM Central
    - cron: '0 1 * * *'    # 8:00 PM Central (final check)
  workflow_dispatch: # Allow manual trigger

jobs:
  post-inmates:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write # Allow pushing updates to repository
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Add randomized delay for Instagram detection avoidance
      run: |
        # Generate random delay between 0-120 seconds (¬±1 minute)
        RANDOM_DELAY=$((RANDOM % 121))
        echo "üé≤ Adding random delay of $RANDOM_DELAY seconds to avoid detection patterns"
        sleep $RANDOM_DELAY

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dotenv pytz

    - name: Create .env file with secrets
      run: |
        echo "ACCESS_TOKEN=${{ secrets.META_ACCESS_TOKEN }}" >> .env
        echo "APP_ID=${{ secrets.META_APP_ID }}" >> .env
        echo "BUSINESS_ID=${{ secrets.META_BUSINESS_ID }}" >> .env

    - name: Check for posting queue
      id: check_queue
      run: |
        if [ -f "posting_queue.json" ]; then
          echo "queue_exists=true" >> $GITHUB_OUTPUT
          echo "üìã Posting queue found"
        else
          echo "queue_exists=false" >> $GITHUB_OUTPUT
          echo "üì≠ No posting queue found"
        fi

    - name: Post next inmates to Instagram
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        echo "üì± Posting next batch of inmates to Instagram..."
        python data.py post-next
        echo "‚úÖ Posting batch completed"

    - name: Add random delay between posts for human-like behavior
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        # Add another small random delay after posting
        RANDOM_DELAY=$((RANDOM % 31 + 10))  # 10-40 seconds
        echo "üò¥ Adding random post-posting delay of $RANDOM_DELAY seconds"
        sleep $RANDOM_DELAY

    - name: Commit queue updates
      if: steps.check_queue.outputs.queue_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if posting_queue.json was modified
        if git diff --quiet posting_queue.json; then
          echo "üì≠ No queue changes to commit"
        else
          git add posting_queue.json
          git commit -m "Update posting queue - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "‚úÖ Queue updates committed"
        fi

    - name: Skip if no queue
      if: steps.check_queue.outputs.queue_exists == 'false'
      run: |
        echo "‚è≠Ô∏è  No posting queue found - skipping this run"
        echo "üí° Queue will be created when daily scraping runs at 6:00 PM UTC" 